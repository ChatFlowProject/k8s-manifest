
replicaCount: 2

image:
  repository: jerry0339/chatflow-member
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080
  nodePort: 30002

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: 100Mi
    cpu: 100m
  limits:
    memory: 200Mi
    cpu: 200m

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumeMounts:
  - name: secret-datasource
    mountPath: /usr/src/member/datasource

volumes:
  - name: secret-datasource
    secret:
      secretName: chatflow-memeber-datasource

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  data:
    properties:
      profile_active: "prod"
      datasource: "/usr/src/member/datasource/db-info.yaml"

secret:
  data:
    db:
      db-info.yaml: |
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://43.203.119.187:3306/chatflow?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
        username: snowball
        password: 1234